var consoles = [];

//fake the serial output
//0: console 1
//1: console 2
//2: console 3 
//3: console 4
//supposed to be done in serial communication
var serialDatas = [];

//stores all four instructions
//generated by the consoles
var allInstructs = [];

//flow of control
var countdown = [50,45,40,30,27,24,21,18,15,12,10,8];
//var countdown = [15,15,15,15,15,15,15,15,15,15,10,10,10,10,10,10,10,10,10,10];
//var countdown = [20,20,20,20,20,20,20,20,20,20,20,10,10,10,10,10,10,10,10,10];
var progress = 0;
var lives = 10;
var offset = 0;
var rounds = 0;
var roundGoing = false;
var hits = 0;
var timer = 0;
var phase = 0;
var lastTimer = 0;
var curTimer = -1;

var clean = false;
var earlyEnd = false;
var gCount = 3;
function setup() {
  //failSound.play();

  createCanvas(400, 400);
  initConsole();
  
  //serial data initialization
  serialDatas[0] = [0,0,[0,0,0],0,0,0];
  serialDatas[1] = [0,0,0,0,0,0];
  serialDatas[2] = [0,0,0,[0,0,0],0];
  serialDatas[3] = [0,0,0,0,0,0];
  
  serialSetup();
  //get instruction in each round
  //newRoundInstruct();
  //playBgm();
  introSound.setVolume(1.3);

}

function draw() {
  background(220);
  //phase 0 : introduction

  if(lives < 0){
    phase = 2;
  }

  if(phase == 0){
    if(clean == false){
      for(var i = 0 ; i < 4 ; i++){
        serials[i].write("                                                                                           ")
      }
      clean = true;
    }
    

    //text("earth is fucked.",width/2,height/2)
  }
  else if(phase == 1){
    //if it is a new round
    //record timestamp
    //put hits to 0
    //fetch new round of instruction
    
    serialUpdate();
    if(roundGoing == false){

      playTimer();
      curTimer = countdown[rounds]*1000;
      offset = int(millis());
      roundGoing = true;
      earlyEnd = false;
      hits = 0;
      newRoundInstruct();
    }
    
    //if in round
    else{
      //if lives goes to 0
      //game fails
      playProgress();
      

      //if within time 
      if(int(millis()) - offset < curTimer){
        timer = (curTimer - (int(millis()) - offset));
        // if(int(timer/1000) != lastTimer){
        //   console.log(lastTimer);
        //   lastTimer = int(timer/1000);
        //   pushInfo();
        // }
        lastTimer = int(timer/1000);
        printAllStats();

        if(hits == 4){
          if(earlyEnd == false){
            if(rounds == 0 || rounds == 1 || rounds == 2 || rounds == 3 || rounds == 4 || rounds == 5){
              curTimer = int(millis()) - offset + 4000;
            }
            earlyEnd = true;
          }
          
        }
      }
      //if time runs out
      else{
        roundGoing = false;

        //progress += 1.5 * hits;
        progress += 9;
        lives -= 4-hits;
        
        
        //if progress goes to full 
        if(progress > 100){
          phase = 3;
          return;
        }

        if(lives < 0){
          phase = 2;
          return;
        }

        
        
        rounds++;
      }
    }
  }
  //failure
  else if (phase ==2){
    //gCount --;
    text("you fucked.",width/2,height/2)
    newPlay(failSound);
    for (var i = 0 ; i <4 ; i++){
      var text1 = "Game over! Unfortunately you died. Better luck next time."
      text1 = populate(text1);
      if(text.length < 80){
        text1 += "                                                                       ";
      }
      serials[i].write(text1);
    }

    //if(gCount < 0){
      noLoop();
    //}
    
  }

  else if (phase ==3){
    //gCount --;
    text("you fucking good.",width/2,height/2);
    for (var i = 0 ; i < 4; i++){
      var text1 = "Progress: 100%      " + "Ship is launching!!!"
      text1 = populate(text1);
      if(text.length < 80){
        text1 += "                                                                       ";
      }
      serials[i].write(text1);
    }
    newPlay(progressSound[5]);
    //if(gCount < 0){
      noLoop();
    //}
  }



  //update serial inputs
  
  //force event listen on every interact
  listenEvents();
  //debug
  printAllConsoles();
}

function printAllStats(){
  text(int(timer/1000),width/2,height/2);
  text("Lives: "+lives,width/2,height/2+15);  
  text("progress: "+progress,width/2,height/2+30);
  text("round: "+rounds,width/2,height/2+45);
  text("hits: "+hits,width/2,height/2+60);
  //text("Ins: "+LCDIn,width/2,height/2+75)
}


//fake serial communication
//console 1:
  //a: 1st button
function keyTyped(){
  if(key === 'q'){
    serialDatas[0][0] = 1;
  }
  if(key === 'a'){
    serialDatas[0][1] = 1;
  }
  if(key === 'w'){
    serialDatas[1][0] = 1;
  }
  if(key === 'e'){
    serialDatas[2][0] = 1;
  }
  if(key === 'r'){
    serialDatas[3][0] = 1;
  }
}

function keyReleased(){
  if(key === 'q'){
    serialDatas[0][0] = 0;
  }
  if(key === 'a'){
    serialDatas[0][1] = 0;
  }
  if(key === 'w'){
    serialDatas[1][0] = 0;
  }
  if(key === 'e'){
    serialDatas[2][0] = 0;
  }
  if(key === 'r'){
    serialDatas[3][0] = 0;
  }
}
//track each console whether they hit or not

function keyPressed(){
  if(key == '.'){
    phase ++;
  }

  if(key == 'r'){
    pushInfo();
  }

  if(key == ","){
    if (phase ==2){
      //gCount --;
      //text("you fucked.",width/2,height/2)
      //newPlay(failSound);
      for (var i = 0 ; i <4 ; i++){
        var text1 = "Game over! Unfortunately you died. Better luck next time."
        text1 = populate(text1);
        if(text.length < 80){
          text1 += "                                                                       ";
        }
        serials[i].write(text1);
      }
  
      //if(gCount < 0){
        //noLoop();
      //}
      
    }
  
    else if (phase ==3){
      //gCount --;
      //text("you fucking good.",width/2,height/2);
      for (var i = 0 ; i < 4; i++){
        var text1 = "Progress: 100%      " + "Ship is launching!!!"
        text1 = populate(text1);
        if(text.length < 80){
          text1 += "                                                                       ";
        }
        serials[i].write(text1);
      }
      //newPlay(progressSound[5]);
      //if(gCount < 0){
        //noLoop();
      //}
    }
  }

  if(phase == 0){
    if(key == " "){
      newPlay(introSound);  
    }
  }

  // if(keyCode == LEFT_ARROW){
  //   clearScreen();
  // }
  else if(keyCode == UP_ARROW){
    hits++;
  }
  else if(keyCode == RIGHT_ARROW){
    timer += 1000;
  }
}